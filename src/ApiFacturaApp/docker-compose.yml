services:
  # Api and worker services
  ms_apiproducts:
    image: ms_apiproducts
    build:
      context: .
      dockerfile: MS_ApiProducts/Dockerfile
      
  ms_apibilling:
    image: ms_apibilling
    build:
      context: .
      dockerfile: MS_ApiBilling/Dockerfile
  ms_sendnotifications:
    image: ms_sendnotifications
    build:
      context: .
      dockerfile: MS_SendNotifications/Dockerfile

  ms_sendtaxes:
    image: ms_sendtaxes
    build:
      context: .
      dockerfile: MS_SendTaxes/Dockerfile

  ms_sendtaxesworker:
    image: ms_sendtaxesworker
    build:
      context: .
      dockerfile: MS_SendTaxesWorker/Dockerfile

  # RabbitMQ with Management Plugin
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672' # RabbitMQ Management UI
    networks:
      - monitoring

  # Prometheus for monitoring metrics
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  # Grafana for visualizing metrics
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Loki for logging
  loki:
    image: grafana/loki:2.0.0
    ports:
      - "3100:3100"
    networks:
      - monitoring
    command: -config.file=/etc/loki/local-config.yaml

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.0.0
    volumes:
      - /var/log:/var/log
    networks:
      - monitoring
    command: -config.file=/etc/promtail/config.yml

  # Mailhog for testing email sending
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge